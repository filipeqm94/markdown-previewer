{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","text","handleChange","bind","e","this","setState","target","value","markdown","className","onChange","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAmFeA,E,kDAtCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,KA3CY,03BA8Cd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAPH,E,gDAUnB,SAAaC,GACXC,KAAKC,SAAS,CACZL,KAAMG,EAAEG,OAAOC,U,oBAInB,WAAU,IACAP,EAASI,KAAKL,MAAdC,KACFQ,EAAWR,EAEjB,OACE,sBAAKS,UAAU,oDAAf,UACE,oBAAIA,UAAU,0BAAd,uCACA,sBAAKA,UAAU,kCAAf,UACE,oBAAIA,UAAU,cAAd,iCACA,0BAAUF,MAAOP,EAAMU,SAAUN,KAAKH,kBAExC,sBAAKQ,UAAU,kCAAf,UACE,oBAAIA,UAAU,cAAd,qCACA,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,UAAgBD,gB,GA/BVG,IAAMC,WCvCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0c6ede9e.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nconst initialState = `\n# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine === '\\`\\`\\`' && lastLine === '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\n\nThere's also [links](https://www.filipemarques.me), and\n> Block Quotes!\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: initialState,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value,\n    });\n  }\n\n  render() {\n    const { text } = this.state;\n    const markdown = text;\n\n    return (\n      <div className='container-fluid row d-flex justify-content-around'>\n        <h1 className='text-center col-12 mt-5'>React Markdown Previewer!</h1>\n        <div className='col-md-6 col-sm-12 mt-5 wrapper'>\n          <h3 className='text-center'>Type Markdown here:</h3>\n          <textarea value={text} onChange={this.handleChange}></textarea>\n        </div>\n        <div className='col-md-6 col-sm-12 mt-5 wrapper'>\n          <h3 className='text-center'>Watch the results here!</h3>\n          <div className='preview'>\n            <ReactMarkdown>{markdown}</ReactMarkdown>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}